services:
  user-service:
    build: ./user-service
    container_name: user_service
    env_file: .env
    ports:
      - "${USER_SERVICE_PORT}:8080"
    depends_on:
      - postgres-user
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-user:5432/${USER_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}

  auth-service:
    build: ./auth-service
    container_name: auth_service
    env_file: .env
    ports:
      - "${AUTH_SERVICE_PORT}:8081"
    depends_on:
      - postgres-auth
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-auth:5432/${AUTH_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}

  postgres-user:
    image: postgres:15
    container_name: postgres_user_db
    env_file: .env
    environment:
      POSTGRES_DB: ${USER_DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${USER_DB_PORT}:5432"
    volumes:
      - postgres_user_data:/var/lib/postgresql/data

  postgres-auth:
    image: postgres:15
    container_name: postgres_auth_db
    env_file: .env
    environment:
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${AUTH_DB_PORT}:5432"
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis_user_service
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes


volumes:
  postgres_user_data:
  postgres_auth_data:
  redis_data: